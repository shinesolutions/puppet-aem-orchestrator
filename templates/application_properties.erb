<% pfx = 'aem_orchestrator::application_properties::' -%>
<%- if scope[pfx + 'aem_client_api_connection_timeout'] != nil -%>
  <%--%>aem.client.api.connection.timeout = <%= scope[pfx + 'aem_client_api_connection_timeout'] %>
<%- end -%>
<%- if scope[pfx + 'aem_client_api_debug'] != nil -%>
  <%--%>aem.client.api.debug = <%= scope[pfx + 'aem_client_api_debug'] %>
<%- end -%>
<%- if scope[pfx + 'aem_client_api_verifyssl'] != nil -%>
  <%--%>aem.client.api.verifyssl = <%= scope[pfx + 'aem_client_api_verifyssl'] %>
<%- end -%>
<%- if scope[pfx + 'aem_credentials_orchestrator_password'] != nil -%>
  <%--%>aem.credentials.orchestrator.password = <%= scope[pfx + 'aem_credentials_orchestrator_password'] %>
<%- end -%>
<%- if scope[pfx + 'aem_credentials_orchestrator_username'] != nil -%>
  <%--%>aem.credentials.orchestrator.username = <%= scope[pfx + 'aem_credentials_orchestrator_username'] %>
<%- end -%>
<%- if scope[pfx + 'aem_credentials_replicator_password'] != nil -%>
  <%--%>aem.credentials.replicator.password = <%= scope[pfx + 'aem_credentials_replicator_password'] %>
<%- end -%>
<%- if scope[pfx + 'aem_credentials_replicator_username'] != nil -%>
  <%--%>aem.credentials.replicator.username = <%= scope[pfx + 'aem_credentials_replicator_username'] %>
<%- end -%>
<%- if scope[pfx + 'aem_credentials_s3_file_uri'] != nil -%>
  <%--%>aem.credentials.s3.file.uri = <%= scope[pfx + 'aem_credentials_s3_file_uri'] %>
<%- end -%>
<%- if scope[pfx + 'aem_credentials_s3_use'] != nil -%>
  <%--%>aem.credentials.s3.use = <%= scope[pfx + 'aem_credentials_s3_use'] %>
<%- end -%>
<%- if scope[pfx + 'aem_flush_log_level'] != nil -%>
  <%--%>aem.flush.logLevel = <%= scope[pfx + 'aem_flush_log_level'] %>
<%- end -%>
<%- if scope[pfx + 'aem_port_author'] != nil -%>
  <%--%>aem.port.author = <%= scope[pfx + 'aem_port_author'] %>
<%- end -%>
<%- if scope[pfx + 'aem_port_author_dispatcher'] != nil -%>
  <%--%>aem.port.authorDispatcher = <%= scope[pfx + 'aem_port_author_dispatcher'] %>
<%- end -%>
<%- if scope[pfx + 'aem_port_preview_publish'] != nil -%>
  <%--%>aem.port.previewPublish = <%= scope[pfx + 'aem_port_preview_publish'] %>
<%- end -%>
<%- if scope[pfx + 'aem_port_preview_publish_dispatcher'] != nil -%>
  <%--%>aem.port.previewPublishDispatcher = <%= scope[pfx + 'aem_port_preview_publish_dispatcher'] %>
<%- end -%>
<%- if scope[pfx + 'aem_port_publish'] != nil -%>
  <%--%>aem.port.publish = <%= scope[pfx + 'aem_port_publish'] %>
<%- end -%>
<%- if scope[pfx + 'aem_port_publish_dispatcher'] != nil -%>
  <%--%>aem.port.publishDispatcher = <%= scope[pfx + 'aem_port_publish_dispatcher'] %>
<%- end -%>
<%- if scope[pfx + 'aem_protocol_author'] != nil -%>
  <%--%>aem.protocol.author = <%= scope[pfx + 'aem_protocol_author'] %>
<%- end -%>
<%- if scope[pfx + 'aem_protocol_author_dispatcher'] != nil -%>
  <%--%>aem.protocol.authorDispatcher = <%= scope[pfx + 'aem_protocol_author_dispatcher'] %>
<%- end -%>
<%- if scope[pfx + 'aem_protocol_preview_publish'] != nil -%>
  <%--%>aem.protocol.previewPublish = <%= scope[pfx + 'aem_protocol_preview_publish'] %>
<%- end -%>
<%- if scope[pfx + 'aem_protocol_preview_publish_dispatcher'] != nil -%>
  <%--%>aem.protocol.previewPublishDispatcher = <%= scope[pfx + 'aem_protocol_preview_publish_dispatcher'] %>
<%- end -%>
<%- if scope[pfx + 'aem_protocol_publish'] != nil -%>
  <%--%>aem.protocol.publish = <%= scope[pfx + 'aem_protocol_publish'] %>
<%- end -%>
<%- if scope[pfx + 'aem_protocol_publish_dispatcher'] != nil -%>
  <%--%>aem.protocol.publishDispatcher = <%= scope[pfx + 'aem_protocol_publish_dispatcher'] %>
<%- end -%>
<%- if scope[pfx + 'aem_relaxed_ssl_enable'] != nil -%>
  <%--%>aem.relaxed.ssl.enable = <%= scope[pfx + 'aem_relaxed_ssl_enable'] %>
<%- end -%>
<%- if scope[pfx + 'aem_replication_log_level'] != nil -%>
  <%--%>aem.replication.logLevel = <%= scope[pfx + 'aem_replication_log_level'] %>
<%- end -%>
<%- if scope[pfx + 'aem_reverse_replication_enable'] != nil -%>
  <%--%>aem.reverseReplication.enable = <%= scope[pfx + 'aem_reverse_replication_enable'] %>
<%- end -%>
<%- if scope[pfx + 'aem_reverse_replication_log_level'] != nil -%>
  <%--%>aem.reverseReplication.logLevel = <%= scope[pfx + 'aem_reverse_replication_log_level'] %>
<%- end -%>
<%- if scope[pfx + 'aem_reverse_replication_transport_uri_postfix'] != nil -%>
  <%--%>aem.reverseReplication.transportUri.postfix = <%= scope[pfx + 'aem_reverse_replication_transport_uri_postfix'] %>
<%- end -%>
<%- if scope[pfx + 'alarm_content_health_check_terminate_instance_enable'] != nil -%>
  <%--%>alarm.content.health.check.terminate.instance.enable = <%= scope[pfx + 'alarm_content_health_check_terminate_instance_enable'] %>
<%- end -%>
<%- if scope[pfx + 'aws_client_connection_timeout'] != nil -%>
  <%--%>aws.client.connection.timeout = <%= scope[pfx + 'aws_client_connection_timeout'] %>
<%- end -%>
<%- if scope[pfx + 'aws_client_max_error_retry'] != nil -%>
  <%--%>aws.client.max.errorRetry = <%= scope[pfx + 'aws_client_max_error_retry'] %>
<%- end -%>
<%- if scope[pfx + 'aws_client_protocol'] != nil -%>
  <%--%>aws.client.protocol = <%= scope[pfx + 'aws_client_protocol'] %>
<%- end -%>
<%- if scope[pfx + 'aws_client_proxy_host'] != nil -%>
  <%--%>aws.client.proxy.host = <%= scope[pfx + 'aws_client_proxy_host'] %>
<%- end -%>
<%- if scope[pfx + 'aws_client_proxy_port'] != nil -%>
  <%--%>aws.client.proxy.port = <%= scope[pfx + 'aws_client_proxy_port'] %>
<%- end -%>
<%- if scope[pfx + 'aws_client_use_proxy'] != nil -%>
  <%--%>aws.client.useProxy = <%= scope[pfx + 'aws_client_use_proxy'] %>
<%- end -%>
<%- if scope[pfx + 'aws_cloudformation_auto_scale_group_logical_id_author_dispatcher'] != nil -%>
  <%--%>aws.cloudformation.autoScaleGroup.logicalId.authorDispatcher = <%= scope[pfx + 'aws_cloudformation_auto_scale_group_logical_id_author_dispatcher'] %>
<%- end -%>
<%- if scope[pfx + 'aws_cloudformation_auto_scale_group_logical_id_preview_publish'] != nil -%>
  <%--%>aws.cloudformation.autoScaleGroup.logicalId.previewPublish = <%= scope[pfx + 'aws_cloudformation_auto_scale_group_logical_id_preview_publish'] %>
<%- end -%>
<%- if scope[pfx + 'aws_cloudformation_auto_scale_group_logical_id_preview_publish_dispatcher'] != nil -%>
  <%--%>aws.cloudformation.autoScaleGroup.logicalId.previewPublishDispatcher = <%= scope[pfx + 'aws_cloudformation_auto_scale_group_logical_id_preview_publish_dispatcher'] %>
<%- end -%>
<%- if scope[pfx + 'aws_cloudformation_auto_scale_group_logical_id_publish'] != nil -%>
  <%--%>aws.cloudformation.autoScaleGroup.logicalId.publish = <%= scope[pfx + 'aws_cloudformation_auto_scale_group_logical_id_publish'] %>
<%- end -%>
<%- if scope[pfx + 'aws_cloudformation_auto_scale_group_logical_id_publish_dispatcher'] != nil -%>
  <%--%>aws.cloudformation.autoScaleGroup.logicalId.publishDispatcher = <%= scope[pfx + 'aws_cloudformation_auto_scale_group_logical_id_publish_dispatcher'] %>
<%- end -%>
<%- if scope[pfx + 'aws_cloudformation_load_balancer_logical_id_author'] != nil -%>
  <%--%>aws.cloudformation.loadBalancer.logicalId.author = <%= scope[pfx + 'aws_cloudformation_load_balancer_logical_id_author'] %>
<%- end -%>
<%- if scope[pfx + 'aws_cloudformation_sns_logical_id_event_topic'] != nil -%>
  <%--%>aws.cloudformation.sns.logicalId.eventTopic = <%= scope[pfx + 'aws_cloudformation_sns_logical_id_event_topic'] %>
<%- end -%>
<%- if scope[pfx + 'aws_cloudformation_stack_name_author'] != nil -%>
  <%--%>aws.cloudformation.stackName.author = <%= scope[pfx + 'aws_cloudformation_stack_name_author'] %>
<%- end -%>
<%- if scope[pfx + 'aws_cloudformation_stack_name_author_dispatcher'] != nil -%>
  <%--%>aws.cloudformation.stackName.authorDispatcher = <%= scope[pfx + 'aws_cloudformation_stack_name_author_dispatcher'] %>
<%- end -%>
<%- if scope[pfx + 'aws_cloudformation_stack_name_messaging'] != nil -%>
  <%--%>aws.cloudformation.stackName.messaging = <%= scope[pfx + 'aws_cloudformation_stack_name_messaging'] %>
<%- end -%>
<%- if scope[pfx + 'aws_cloudformation_stack_name_preview_publish'] != nil -%>
  <%--%>aws.cloudformation.stackName.previewPublish = <%= scope[pfx + 'aws_cloudformation_stack_name_preview_publish'] %>
<%- end -%>
<%- if scope[pfx + 'aws_cloudformation_stack_name_preview_publish_dispatcher'] != nil -%>
  <%--%>aws.cloudformation.stackName.previewPublishDispatcher = <%= scope[pfx + 'aws_cloudformation_stack_name_preview_publish_dispatcher'] %>
<%- end -%>
<%- if scope[pfx + 'aws_cloudformation_stack_name_publish'] != nil -%>
  <%--%>aws.cloudformation.stackName.publish = <%= scope[pfx + 'aws_cloudformation_stack_name_publish'] %>
<%- end -%>
<%- if scope[pfx + 'aws_cloudformation_stack_name_publish_dispatcher'] != nil -%>
  <%--%>aws.cloudformation.stackName.publishDispatcher = <%= scope[pfx + 'aws_cloudformation_stack_name_publish_dispatcher'] %>
<%- end -%>
<%- if scope[pfx + 'aws_device_name'] != nil -%>
  <%--%>aws.device.name = <%= scope[pfx + 'aws_device_name'] %>
<%- end -%>
<%- if scope[pfx + 'aws_region'] != nil -%>
  <%--%>aws.region = <%= scope[pfx + 'aws_region'] %>
<%- end -%>
<%- if scope[pfx + 'aws_snapshot_tags'] != nil -%>
  <%--%>aws.snapshot.tags = <%= scope[pfx + 'aws_snapshot_tags'] %>
<%- end -%>
<%- if scope[pfx + 'aws_sqs_queue_name'] != nil -%>
  <%--%>aws.sqs.queueName = <%= scope[pfx + 'aws_sqs_queue_name'] %>
<%- end -%>
<%- if scope[pfx + 'endpoints_enabled'] != nil -%>
  <%--%>endpoints.enabled = <%= scope[pfx + 'endpoints_enabled'] %>
<%- end -%>
<%- if scope[pfx + 'endpoints_health_enabled'] != nil -%>
  <%--%>endpoints.health.enabled = <%= scope[pfx + 'endpoints_health_enabled'] %>
<%- end -%>
<%- if scope[pfx + 'endpoints_info_enabled'] != nil -%>
  <%--%>endpoints.info.enabled = <%= scope[pfx + 'endpoints_info_enabled'] %>
<%- end -%>
<%- if scope[pfx + 'http_client_relaxed_ssl_enable'] != nil -%>
  <%--%>http.client.relaxed.ssl.enable = <%= scope[pfx + 'http_client_relaxed_ssl_enable'] %>
<%- end -%>
<%- if scope[pfx + 'startup_wait_for_author_elb_back_off_period'] != nil -%>
  <%--%>startup.waitForAuthorElb.backOffPeriod = <%= scope[pfx + 'startup_wait_for_author_elb_back_off_period'] %>
<%- end -%>
<%- if scope[pfx + 'startup_wait_for_author_elb_back_off_period_multiplier'] != nil -%>
  <%--%>startup.waitForAuthorElb.backOffPeriodMultiplier = <%= scope[pfx + 'startup_wait_for_author_elb_back_off_period_multiplier'] %>
<%- end -%>
<%- if scope[pfx + 'startup_wait_for_author_elb_max_attempts'] != nil -%>
  <%--%>startup.waitForAuthorElb.maxAttempts = <%= scope[pfx + 'startup_wait_for_author_elb_max_attempts'] %>
<%- end -%>
<%- if scope[pfx + 'startup_wait_for_author_elb_max_back_off_period'] != nil -%>
  <%--%>startup.waitForAuthorElb.maxBackOffPeriod = <%= scope[pfx + 'startup_wait_for_author_elb_max_back_off_period'] %>
<%- end -%>
